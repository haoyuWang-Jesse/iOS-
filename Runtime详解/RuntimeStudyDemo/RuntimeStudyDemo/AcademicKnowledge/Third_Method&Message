runtime 第三节 方法与消息

前言：这一章，我们就要开始讨论Runtime中最有意思的一部分：消息处理机制。我们将详细讨论消息的发送及消息的转发。在讨论消息之前，先来了解下与方法相关的一些内容。

1、基础数据类型
    1.1 SEL
        1、SEL又叫选择器，是表示一个方法的selector的指针，其定义如下：
        <#typedef struct objc_selector *SEL;#>
        注意：
        （1）<#方法的selector#>用于表示：方法在运行时的名字。
        （2）oc在编译时，会依据每一个<#方法的名字、参数序列#>，生成一个<#唯一的整型标识#>（即：int型的地址，ex:0x100002d72），这个标识就是SEL。
        （3）两个类中（不管他们是父类与子类的关系，还是之间没有关系）只要方法名相同，SEL就是一样的。每个方法对应着一个SEL，所以：
                （3.1）在OC的同一个类（及其子类）中不允许出现2个同名的方法。即使参数类型不同也不行，相同的方法只能有一个SEL。
                （3.2）在不同的类中，可以有相同的selector。不同类的实例对象执行相同的selector时，会在各自所属类的方法列表中根据selector去查找对应IMP。
        2、工程中<#所有的#>SEL组成一个唯一的set集合，?? SEL作用是什么？因为它本质上只是一个指针而已，指向了方法的selector。消息传递时怎么用的？？
        3、获取SEL的三种方式：
        （1）sel_registerName函数
        （2）Objective-C编译器提供的@selector()
        （3）NSSelectorFromString()方法

    1.2 IMP
        1、IMP也是一个指针，指向方法实现的首地址，定义如下：
        <#id (*IMP)(id, SEL, ...)#>



